<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

       <bean id="jdbcTemplate_inv" class="org.springframework.jdbc.core.JdbcTemplate">
              <constructor-arg index="0" ref="dataSource_inv" />
       </bean>

       <bean id="dataSource_inv" class="com.alibaba.druid.pool.DruidDataSource"
             init-method="init" destroy-method="close">
              <!-- 基本属性 url、user、password -->
              <property name="url" value="jdbc:oracle:thin:@192.168.210.221:1521:ITSP" />
              <property name="driverClassName" value="oracle.jdbc.driver.OracleDriver"></property>
              <property name="username" value="ahdx_coredb_dev" />
              <property name="password" value="ahdx_coredb_dev" />
              <!-- 配置初始化大小、最小、最大 -->
              <property name="initialSize" value="2" />
              <property name="minIdle" value="5" />
              <property name="maxActive" value="5" />
              <!-- 配置获取连接等待超时的时间 -->
              <property name="maxWait" value="60000" />
              <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
              <property name="timeBetweenEvictionRunsMillis" value="60000" />
              <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
              <property name="minEvictableIdleTimeMillis" value="300000" />
       </bean>
    <!--redisTemplate-->
    <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <property name="maxTotal" value="500" />
        <property name="maxIdle" value="400" />
        <property name="maxWaitMillis" value="10000" />
        <property name="testOnBorrow" value="true" />
    </bean>

    <bean id="jedisConnectionFactory"
          class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
        <property name="hostName" value="192.168.80.85" />
        <property name="port" value="6379" />
        <property name="poolConfig" ref="jedisPoolConfig" />
    </bean>

    <bean id="stringRedisSerializer"
          class="org.springframework.data.redis.serializer.StringRedisSerializer" />

    <bean id="jdkSerializationRedisSerializer"
          class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer" />

    <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
        <property name="connectionFactory" ref="jedisConnectionFactory" />
        <property name="keySerializer">
            <ref bean="stringRedisSerializer" />
            <!--<bean class="org.springframework.data.redis.serializer.StringRedisSerializer"/> -->
        </property>
        <property name="hashKeySerializer">
            <ref bean="stringRedisSerializer" />
            <!--<bean class="org.springframework.data.redis.serializer.StringRedisSerializer"/> -->
        </property>
        <property name="valueSerializer">
            <ref bean="jdkSerializationRedisSerializer" />
            <!--<bean class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer"/> -->
        </property>
        <property name="hashValueSerializer">
            <ref bean="jdkSerializationRedisSerializer" />
            <!--<bean class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer"/> -->
        </property>
    </bean>

</beans>